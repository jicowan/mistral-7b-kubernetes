apiVersion: apps/v1
kind: Deployment
metadata:
  name: neuron-mistral-7b-dlc
  labels:
    app: neuron-mistral-7b-dlc
    version: aws-dlc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: neuron-mistral-7b-dlc
  template:
    metadata:
      labels:
        app: neuron-mistral-7b-dlc
        version: aws-dlc
    spec:
      containers:
      - name: neuron-server
        image: 820537372947.dkr.ecr.us-west-2.amazonaws.com/neuron-mistral-7b-dlc:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: MODEL_NAME
          value: "mistralai/Mistral-7B-Instruct-v0.3"
        - name: NEURON_CORES
          value: "2"
        - name: MAX_LENGTH
          value: "2048"
        - name: BATCH_SIZE
          value: "1"
        - name: SEQUENCE_LENGTH
          value: "2048"
        - name: COMPILED_MODEL_PATH
          value: "/tmp/neuron_compiled_model"
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        # AWS Neuron DLC optimizations (already set in base image)
        - name: NEURON_RT_NUM_CORES
          value: "2"
        - name: NEURON_CC_FLAGS
          value: "--model-type=transformer --optlevel=2"
        - name: NEURON_RT_EXEC_TIMEOUT
          value: "60"
        - name: NEURON_RT_LOAD_TIMEOUT
          value: "60"
        - name: AWS_DEFAULT_REGION
          value: "us-west-2"  # Adjust to your region
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: hugging-face-token
              key: token
        - name: HF_HOME
          value: "/tmp/hf_home"
        - name: TOKENIZERS_PARALLELISM
          value: "false"
        resources:
          requests:
            aws.amazon.com/neuron: 1
            # memory: "8Gi"
            # cpu: "4"
          limits:
            aws.amazon.com/neuron: 1
            # memory: "16Gi"
            # cpu: "8"
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: 8000
        #   initialDelaySeconds: 300  # Extended for compilation
        #   periodSeconds: 10
        #   timeoutSeconds: 30
        #   failureThreshold: 5
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 8000
        #   initialDelaySeconds: 360
        #   periodSeconds: 30
        #   timeoutSeconds: 30
        #   failureThreshold: 3
        volumeMounts:
        - name: neuron-cache
          mountPath: /tmp/neuron_compiled_model
        - name: neuron-device
          mountPath: /dev/neuron0
        # Mount for AWS credentials if needed
        - name: aws-credentials
          mountPath: /root/.aws
          readOnly: true
      volumes:
      - name: neuron-cache
        emptyDir:
          sizeLimit: 20Gi
      - name: neuron-device
        hostPath:
          path: /dev/neuron0
          type: CharDevice
      # AWS credentials volume (optional)
      - name: aws-credentials
        secret:
          secretName: aws-credentials
          optional: true
      nodeSelector:
        # AWS Inferentia instances
        node.kubernetes.io/instance-type: inf2.8xlarge  # or inf2.xlarge
        # kubernetes.io/arch: amd64
      tolerations:
      - key: aws.amazon.com/neuron
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: neuron-mistral-7b-dlc-service
  labels:
    app: neuron-mistral-7b-dlc
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: neuron-mistral-7b-dlc
# ---
# ServiceMonitor for Prometheus (if using)
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: neuron-mistral-7b-dlc-metrics
#   labels:
#     app: neuron-mistral-7b-dlc
# spec:
#   selector:
#     matchLabels:
#       app: neuron-mistral-7b-dlc
#   endpoints:
#   - port: http
#     path: /metrics
#     interval: 30s
